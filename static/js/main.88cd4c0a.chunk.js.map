{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animation","useState","offset","setOffset","containerWidth","maxOffset","length","className","style","width","height","map","image","index","src","alt","transform","transition","type","disabled","onClick","currentOffset","Math","min","max","App","state","animationDuration","handleChangeItemWidth","ev","currentTarget","name","value","setState","previousState","handleChangeFrameAndSteps","handleChangeAnimation","this","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88cd4c0a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\nexport type Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animation: number,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animation,\n}) => {\n  const [offset, setOffset] = useState(0);\n\n  const containerWidth = itemWidth * frameSize;\n\n  const handleLeftArrowClick = () => {\n    setOffset((currentOffset) => {\n      return Math.min(currentOffset + step * itemWidth, 0);\n    });\n  };\n\n  const maxOffset = -(images.length - frameSize) * itemWidth;\n\n  const handleRightArrowClick = () => {\n    setOffset((currentOffset) => {\n      return Math.max(currentOffset - step * itemWidth, maxOffset);\n    });\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: `${containerWidth}px`,\n          height: `${itemWidth}px`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li key={image}>\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              className=\"Carousel__image\"\n              style={{\n                width: `${itemWidth}px`,\n                height: `${itemWidth}px`,\n                transform: `translateX(${offset}px)`,\n                transition: `${animation}ms`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__button-container\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button Carousel__button--prev\"\n          disabled={offset === 0}\n          onClick={handleLeftArrowClick}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          className=\"Carousel__button Carousel__button--next\"\n          data-cy=\"next\"\n          disabled={offset === maxOffset}\n          onClick={handleRightArrowClick}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number | string,\n  frameSize: number | string,\n  step: number | string,\n  animationDuration: number | string,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  handleChangeItemWidth = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = ev.currentTarget;\n\n    if (name === 'itemWidth') {\n      if (+value <= 300 && +value >= 0) {\n        this.setState(previousState => ({\n          ...previousState,\n          [name]: value,\n        }));\n      }\n    }\n  };\n\n  handleChangeFrameAndSteps = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = ev.currentTarget;\n\n    if (name === 'frameSize' || name === 'step') {\n      if (+value <= 10 && +value >= 0) {\n        this.setState(previousState => ({\n          ...previousState,\n          [name]: value,\n        }));\n      }\n    }\n  };\n\n  handleChangeAnimation = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = ev.currentTarget;\n\n    if (name === 'animationDuration') {\n      if (+value <= 4000 && +value >= 0) {\n        this.setState(previousState => ({\n          ...previousState,\n          [name]: value,\n        }));\n      }\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <div className=\"App__inputs\">\n          <label>\n            Item Width:\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min=\"50\"\n              max=\"300\"\n              step=\"10\"\n              className=\"App__item\"\n              onChange={this.handleChangeItemWidth}\n            />\n          </label>\n\n          <label>\n            Frame Size:\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              value={frameSize}\n              min=\"1\"\n              max={images.length}\n              className=\"App__item\"\n              onChange={this.handleChangeFrameAndSteps}\n            />\n          </label>\n\n          <label>\n            Step:\n            <input\n              type=\"number\"\n              name=\"step\"\n              value={step}\n              min=\"1\"\n              max={images.length}\n              className=\"App__item\"\n              onChange={this.handleChangeFrameAndSteps}\n            />\n          </label>\n\n          <label>\n            Animation Duration:\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              min=\"100\"\n              max=\"4000\"\n              step=\"100\"\n              className=\"App__item\"\n              onChange={this.handleChangeAnimation}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animation={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}